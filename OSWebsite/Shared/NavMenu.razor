<nav id="nav" class="w-screen h-10 bg-neutral-400 text-neutral-900 drop-shadow-lg fixed flex items-center select-none font-semibold">
    <div class="container ml-3 flex capitalize ">
        <a @onclick="@(() => hideStart = !hideStart)" class="h-7 w-16 bg-neutral-300/50 mr-2 hover:bg-neutral-300">
            <div id="@(hideStart ? "button" : "button_active")" class="flex justify-center items-center w-full h-full">
                Start
            </div>
        </a>

        @* Divider *@
        <span class="mr-2 border-r-2 border-neutral-300/50" />

        <a @onclick="@(() => MainLayout.setActiveApp("aboutme"))" id="@(MainLayout.activeApp.Equals("aboutme") ? "button_active" : "button")" class="h-7 w-fit p-2 bg-neutral-300/50 hover:bg-neutral-300 mr-2">
           <div class="flex justify-center items-center w-full h-full">
                About me
            </div>
        </a>
        <a @onclick="@(() => MainLayout.setActiveApp("cmd"))" id="@(MainLayout.activeApp.Equals("cmd") ? "button_active" : "button")" class="h-7 w-fit p-2 bg-neutral-300/50 hover:bg-neutral-300">
            <div class="flex justify-center items-center w-full h-full">
                Command Prompt
            </div>
        </a>

        <div hidden="@hideStart" id="startmenu" class="h-48 w-48 fixed bg-neutral-400 top-8 ">
            <ul class="p-2 text-lg">
                <li>
                    Shut Down
                </li>
                <li>
                    <u>R</u>un ...
                </li>
                <li>
                    <u>H</u>elp
                </li>
                <li>
                    <u>F</u>ind
                </li>
                <li>
                    <u>P</u>rograms
                </li>
            </ul>
        </div>

        @* Divider *@
        <span class="mr-2 border-r-2 border-neutral-300/50" />

        @* Clock *@
        <div id="clock" class="absolute right-3 bg-neutral-300/50 ">
            <span class="p-2">@time</span>
        </div>
    </div>
</nav>

@code {
    [CascadingParameter]
    public MainLayout MainLayout { get; set; }
    
    string time = DateTime.Now.ToString("HH:mm");
    Timer clock;
    bool hideStart = true;


    protected override void OnInitialized() => clock = new Timer(Tick, null, 0, 10000);

    private void Tick(object _)
    {
        time = DateTime.Now.ToString("dd MMMM HH:mm");
        InvokeAsync(StateHasChanged);
    }

    
}
